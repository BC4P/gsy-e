version: "3.9"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CLIENT_PASSWORDS=bitnami
      - KAFKA_CLIENT_USERS=user
    depends_on:
      - zookeeper

  redis:
    image: redis:latest
    ports:
      - 6379:6379

  substrate1:
    image: parity/substrate:latest
    ports:
      - 9615:9615 # prometheus
      - 9944:9944 # parity connections
    command:
      - "--alice"
      - "--chain=local"
      - "--no-telemetry"
      - "--unsafe-ws-external"
      - "--unsafe-rpc-external"
      - "--rpc-cors"
      - "all"
      - "--prometheus-external"

  substrate2:
    image: parity/substrate:latest
#    ports:
#      - 9615:9615 # prometheus
#      - 9944:9944 # parity connections
    command:
      - "--bob"
      - "--chain=local"
      - "--unsafe-ws-external"
      - "--unsafe-rpc-external"
      - "--rpc-cors"
      - "all"
      - "--no-telemetry"
      - "--prometheus-external"

  polkadot-ui:
    image: jacogr/polkadot-js-apps:latest
    container_name: polkadot-ui
    ports:
      - 8080:80
    environment:
    # will be opened from host
      - WS_URL=ws://127.0.0.1:9944
    depends_on:
      - substrate1

  gsy-market:
    image: gsy-e
    build: .
    command:
      - run
      - --setup
#      - api_setup.default_community
      - grid_fees.constant_grid_fees
      - --enable-bc
    volumes:
      - ./gsy_e-simulation/:/root/gsy_e-simulation # ~/gsy_e-simulation
    environment:
      - KAFKA_URL=kafka:9092
      - KAFKA_USERNAME=user
      - KAFKA_PASSWORD=bitnami
      - KAFKA_COMMUNICATION_SECURITY_PROTOCOL=PLAINTEXT
      - REDIS_URL=redis://redis
      - DEFAULT_SUBSTRATE_URL=ws://substrate1:9944
    depends_on:
      - kafka
      - redis
      - substrate1


# https://github.com/paritytech/substrate/tree/master/.maintain/local-docker-test-network
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./tools/prometheus/:/etc/prometheus
    restart: always

  grafana:
    image: grafana/grafana
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 3001:3000
    volumes:
      - ./tools/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./tools/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./tools/grafana/dashboard-definitions:/etc/grafana/provisioning/dashboard-definitions
    restart: always

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
